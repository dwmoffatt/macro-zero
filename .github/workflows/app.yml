name: Macro-Zero CI

on:
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

jobs:
  version-app:
    name: Version application based on commit message
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          # We need to fetch with a depth of 2 for pull_request so we can do HEAD^2
          fetch-depth: 2

      - name: Get Commit Message
        id: get_commit_message
        run: |
          echo "commitmsg=$(git log --format=%B -n 1 HEAD^2)" >> $GITHUB_ENV

      - name: Show Commit Message
        run: echo $commitmsg

      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Increment version
        if: contains( env.commitmsg , '--version' )
        run: |
          cd scripts/
          python3 version.py --version
          cd ..

      - name: Increment major
        if: contains( env.commitmsg , '--major' )
        run: |
          cd scripts/
          python3 version.py --major
          cd ..

      - name: Increment minor
        if: contains( env.commitmsg , '--minor' )
        run: |
          cd scripts/
          python3 version.py --minor
          cd ..

      - name: Commit files
        if: contains( env.commitmsg , '--version' ) || contains( env.commitmsg , '--major' ) || contains( env.commitmsg , '--minor' )
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Application version incremented" -a

      - name: Push changes
        if: contains( env.commitmsg , '--version' ) || contains( env.commitmsg , '--major' ) || contains( env.commitmsg , '--minor' )
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.pull_request.head.ref }}

  lint:
    name: Pre-commit all files
    needs: version-app
    if: github.event_name == 'pull_request' && (needs.version-app.result == 'success' || needs.version-app.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel
          python -m pip install --upgrade pre-commit

      - name: Check pre-commit
        run: pre-commit run --all-files

  test:
    name: Run unit tests - ${{ matrix.python-version }} | ${{ matrix.os }} ${{ matrix.architecture }}
    needs: lint
    if: always()
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.7, 3.8, 3.9 ]
        architecture: [ x64 ]
    runs-on: ${{ matrix.os }}
    env:
      PYTHONUNBUFFERED: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run all tests using pytest for Macro-Zero Application
        run: |
          python3 -m pytest --cov-report html:cov_html --cov=src tests/

      - name: Upload coverage data to coveralls.io
        if: matrix.python-version == '3.7'
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 -m coveralls -v --service=github
